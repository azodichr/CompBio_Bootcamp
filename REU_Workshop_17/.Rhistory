cluster <- merge(cluster, average_df, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=value, fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
write.table(cluster, 'cluster_output_raw.csv',row.names=FALSE, sep=",")
scale_01(stress_data[1,2],min(stress_data[1,-1]),max(stress_data[1,-1]))
scale_01(stress_data[1,3],min(stress_data[1,-1]),max(stress_data[1,-1]))
View(stress_data)
View(stress_nonzero)
View(stress_data)
View(stress_nonzero)
View(stress_data)
stress_data[,2]
stress_nonzero2 = stress_data[stress_data[,2]!=0,]
average_reps = function(expression_vector){
for (v in c(1,5,9)){
print(expression_vector[c(v,v+1,v+2,v+3)])
}
}
average_reps(stress_data[1,-1])
average_reps = function(expression_vector){
replicate_averages <- matrix(,nrow=1,ncol=3)
index = 1
for (v in c(1,5,9)){
replicate_averages[index] <- mean(as.matrix(expression_vector[c(v,v+1,v+2,v+3)]))
index = index + 1
}
return(replicate_averages)
}
gene1_avg = average_reps(stress_data[1,-1])
gene1_avg
division = function(num,div){return(num/div)}
fold_change = function(expression_vector){
fc_values <- apply(as.matrix(expression_vector),1,division,div=expression_vector[1])
return(fc_values)
}
fold_change(gene1_avg)
average_matrix <- apply(stress_data[,-1],1,average_reps)
average_df <- data.frame(t(average_matrix)) # For some reason, apply transponse the matrix, so...
fc_matrix <- apply(average_df,1,fold_change)
fc_df <- data.frame(t(fc_matrix))
fc_df$Gene <- stress_data$Gene
fc_matrix <- matrix(,nrow=dim(stress_data)[1],ncol=3)
for (index in seq(1,dim(stress_data)[1])){
row_average <- average_reps(stress_data[index,-1])
row_fc <- fold_change(row_average)
fc_matrix[index,] <- t(row_fc)
}
fc_df <- data.frame(fc_matrix)
fc_df$Gene <- stress_data$Gene
rownames(average_df) <- stress_data$Gene
fc_df_c <- fc_df[,-4]
rownames(fc_df_c) <- fc_df[,4]
names(fc_df_c) <- c('control','heat','drought')
fc_df_c$control <- NULL
c <- kmeans(fc_df_c, 6, iter.max = 100, nstart = 50)
c$size
clusplot(fc_df_c,c$cluster, color=TRUE, shade=TRUE, labels=0, lines=0)
cluster <- as.matrix(c$cluster)
cluster <- merge(cluster, average_df, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=value, fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
cluster <- as.matrix(c$cluster)
cluster <- merge(cluster, fc_df_c, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=value, fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
c <- kmeans(fc_df_c, 10, iter.max = 100, nstart = 50)
c$size
cluster <- as.matrix(c$cluster)
cluster <- merge(cluster, fc_df_c, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=value, fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
View(fc_df_c)
stress_data = read.table("Athal_heat_drought_rma.txt",sep="\t",header=TRUE)
scale_01 = function(x,min_v,max_v){
scaled_value = (x-min_v)/(max_v-min_v)
return(scaled_value)
}
v_min <- min(stress_data[1,-1])
v_max <- max(stress_data[1,-1])
for (v in stress_data[1,-1]){     # Explain the idea of a loop
print(scale_01(v,v_min,v_max))
}
scaled_values <- matrix(,nrow=1,ncol=12) # Mention the warning
index = 1
for (v in stress_data[1,-1]){
scaled_values[index] <- scale_01(v,v_min,v_max)
index = index + 1
}
scaled_values
plot(x_values,scaled_values,col="red",pch=16)
x_values = seq(1,12,1)
plot_expression(x_values,stress_data[1,-1],"red")
plot_expression <- function(x_values,expr_vector,color){
scaled_values <- scale_expression(expr_vector)
plot(x_values,scaled_values,ylab="Expresison value",pch=16,col=color)
}
plot_expression(x_values,stress_data[1,-1],"red")
plot(x_values,scaled_values,col="red",pch=16)
scale_expression <- function(expr_vector){
# Takes a vector of expression values and scales them so that the max is 1 and the min is 0
v_max = max(expr_vector)
v_min = min(expr_vector)
v_len = dim(expr_vector)[2]
scaled_values <- matrix(,nrow=1,ncol=v_len)
index = 1
for (value in expr_vector){
scaled_values[index] <- scale_01(value,v_min,v_max)
index = index + 1
}
return(scaled_values)
}
plot_expression <- function(x_values,expr_vector,color){
scaled_values <- scale_expression(expr_vector)
plot(x_values,scaled_values,ylab="Expresison value",pch=16,col=color)
}
plot_expression(x_values,stress_data[1,-1],"red")
par(new=T)
plot_expression(x_values,stress_data[2,-1],"blue")
par(new=T)
plot_expression(x_values,stress_data[3,-1],"green")
average_reps = function(expression_vector){
for (v in c(1,5,9)){
print(expression_vector[c(v,v+1,v+2,v+3)])
}
}
average_reps(stress_data[1,-1])
average_reps = function(expression_vector){
replicate_averages <- matrix(,nrow=1,ncol=3)
index = 1
for (v in c(1,5,9)){
replicate_averages[index] <- mean(as.matrix(expression_vector[c(v,v+1,v+2,v+3)]))
index = index + 1
}
return(replicate_averages)
}
gene1_avg = average_reps(stress_data[1,-1])
gene1_avg
division = function(num,div){return(num/div)}
fold_change = function(expression_vector){
fc_values <- apply(as.matrix(expression_vector),1,division,div=expression_vector[1])
return(fc_values)
}
fold_change(gene1_avg)
average_matrix <- apply(stress_data[,-1],1,average_reps)
average_df <- data.frame(t(average_matrix)) # For some reason, apply transponse the matrix, so...
fc_matrix <- apply(average_df,1,fold_change)
fc_df <- data.frame(t(fc_matrix))
fc_df$Gene <- stress_data$Gene
fc_matrix <- matrix(,nrow=dim(stress_data)[1],ncol=3)
for (index in seq(1,dim(stress_data)[1])){
row_average <- average_reps(stress_data[index,-1])
row_fc <- fold_change(row_average)
fc_matrix[index,] <- t(row_fc)
}
fc_df <- data.frame(fc_matrix)
fc_df$Gene <- stress_data$Gene
rownames(average_df) <- stress_data$Gene
fc_df_c <- fc_df[,-4]
rownames(fc_df_c) <- fc_df[,4]
names(fc_df_c) <- c('control','heat','drought')
fc_df_c$control <- NULL
c <- kmeans(fc_df_c, 10, iter.max = 100, nstart = 50)
c$size
c <- kmeans(fc_df_c, 15, iter.max = 100, nstart = 50)
c$size
c <- kmeans(average_df, 10, iter.max = 100, nstart = 50)
rownames(average_df) <- stress_data$Gene
View(average_df)
c <- kmeans(fc_df_c, 8, iter.max = 100, nstart = 50)
c$size
clusplot(fc_df_c,c$cluster, color=TRUE, shade=TRUE, labels=0, lines=0)
c <- kmeans(fc_df_c, 8, iter.max = 100, nstart = 50)
clusplot(fc_df_c,c$cluster, color=TRUE, shade=TRUE, labels=0, lines=0)
View(fc_df_c)
fc_df_c <- fc_df[,-4]
rownames(fc_df_c) <- fc_df[,4]
names(fc_df_c) <- c('control','heat','drought')
fc_df_c$control <- NULL
c <- kmeans(fc_df_c, 5, iter.max = 100, nstart = 50)
c$size
clusplot(fc_df_c,c$cluster, color=TRUE, shade=TRUE, labels=0, lines=0)
na.omit(fc_df_c)
fc_df_c <- na.omit(fc_df_c)
cluster <- as.matrix(c$cluster)
cluster <- merge(cluster, fc_df_c, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=value, fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
c$size
c <- kmeans(asinh(fc_df_c), 5, iter.max = 100, nstart = 50)
c$size
clusplot(fc_df_c,c$cluster, color=TRUE, shade=TRUE, labels=0, lines=0)
cluster <- as.matrix(c$cluster)
cluster <- merge(cluster, fc_df_c, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=value, fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
g <- ggplot(cluster_m, aes(x=variable, y=asinh(value), fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
write.table(cluster, 'cluster_output_asinh.csv',row.names=FALSE, sep=",")
c <- kmeans(asinh(fc_df_c), 10, iter.max = 100, nstart = 50)
c$size
clusplot(fc_df_c,c$cluster, color=TRUE, shade=TRUE, labels=0, lines=0)
cluster <- as.matrix(c$cluster)
cluster <- merge(cluster, fc_df_c, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=asinh(value), fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
l
write.table(cluster, 'cluster_output_asinh.csv',row.names=FALSE, sep=",")
c <- kmeans(fc_df_c, 8, iter.max = 100, nstart = 50)
c$size
clusplot(fc_df_c,c$cluster, color=TRUE, shade=TRUE, labels=0, lines=0)
c$size
clusplot(average_df,c$cluster, color=TRUE, shade=TRUE, labels=0, lines=0)
clusplot(fc_df_c,c$cluster, color=TRUE, shade=TRUE, labels=0, lines=0)
log_fc <- asinh(fc_df_c)
fc_df_c <- fc_df[,-4]
rownames(fc_df_c) <- fc_df[,4]
names(fc_df_c) <- c('control','heat','drought')
fc_df_c$control <- NULL
c <- kmeans(fc_df_c, 8, iter.max = 100, nstart = 50)
c$size
cluster <- as.matrix(c$cluster)
cluster <- merge(cluster, fc_df_c, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=asinh(value), fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
g <- ggplot(cluster_m, aes(x=variable, y=value, fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
g <- ggplot(cluster_m[cluster$V1 == '2'], aes(x=variable, y=value, fill=variable))
cluster_m[cluster$V1 == '2']
cluster$V1 == '2'
g <- ggplot(cluster_m[which(cluster$V1 == '2')], aes(x=variable, y=value, fill=variable))
g <- ggplot(cluster_m[which(cluster$V1 == '2'),], aes(x=variable, y=value, fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed")
cluster_m[which(cluster$V1 == '2'),]
View(cluster_m)
g <- ggplot(cluster_m[which(cluster$V1 == 2),], aes(x=variable, y=value, fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed")
g <- ggplot(cluster_m, aes(x=variable, y=value, fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed")
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed")+
facet_wrap(~V1)
c$size
c <- kmeans(fc_df_c, 5, iter.max = 100, nstart = 50)
c$size
cluster <- as.matrix(c$cluster)
cluster <- merge(cluster, fc_df_c, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=value, fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed")+
facet_wrap(~V1)
log_fc <- asinh(fc_df_c)
c_log <- kmeans(log_fc, 10, iter.max = 100, nstart = 50)
c_log$size
cluster <- as.matrix(c_log$cluster)
cluster <- merge(cluster, log_fc, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=asinh(value), fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
c_log <- kmeans(log_fc, 5, iter.max = 100, nstart = 50)
c_log$size
cluster <- as.matrix(c_log$cluster)
cluster <- merge(cluster, log_fc, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=asinh(value), fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
c_log <- kmeans(log_fc, 12, iter.max = 100, nstart = 50)
c_log$size
cluster <- as.matrix(c_log$cluster)
cluster <- merge(cluster, log_fc, by ='row.names')
cluster_m <- melt(cluster, id = c('Row.names','V1'))
g <- ggplot(cluster_m, aes(x=variable, y=asinh(value), fill=variable))
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
facet_wrap(~V1)
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
theme_minimal(18)+
facet_wrap(~V1)
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
theme_minimal(16)+
facet_wrap(~V1)
g + geom_boxplot(outlier.shape = NA)+
geom_hline(yintercept=0, linetype="dashed") +
theme_bw(16)+
facet_wrap(~V1)
asinh(1)
asinh(2)
asinh(10)
asinh(100)
asinh(1000)
log(1000)
log(3)
log(-1000)
asinh(1000)
asinh(3)
asinh(-1000)
log_fc <- asinh(fc_df_c)
plotcluster(log_fc,c_log$cluster,main="5 Clusters")
clusplot(log_fc,c_log$cluster, labels=0, color=TRUE, shade=TRUE)
clusplot(log_fc,c_log$cluster, labels=0, color=TRUE, shade=TRUE, lines=FALSE)
clusplot(log_fc,c_log$cluster, labels=0, color=FALSE, shade=TRUE, lines=FALSE)
clusplot(log_fc,c_log$cluster, labels=0, color=TRUE, shade=FALSE, lines=FALSE)
plotcluster(log_fc,c_log$cluster)
clusplot(log_fc,c_log$cluster, labels=1, color=TRUE, shade=FALSE, lines=FALSE)
2+2
892374982734*9072834723
x <- 2
x*2
y = 3
x*y
z <- x*y
z
x = 12
setwd("/Users/cbazodi/Desktop/athala_circaidan_rythm/")
dir()
read.table("Athal_heat_drought_rma.txt")
stress_data <- read.table("Athal_heat_drought_rma.txt")
View(stress_data)
stress_data <- read.table("Athal_heat_drought_rma.txt",header=TRUE)
head(stress_data)
class(stress_data)
dim(stress_data)
dim(stress_data)
stress_data[1,]
stress_data[,1]
stress_data[1,2:5]
stress_data[1,c(2,6,10)]
stress_data[1,c("control.Rep1","heat.Rep1","drought.Rep1")]
stress_head <- stress_data[1:10,]
View(stress_head)
max(stress_head)
stress_head <- stress_data[1:10,-1]
stress_head
max(stress_head)
min(stress_head)
median(stress_data)
mean(stress_head)
stress_numeric <- as.numeric(stress_head)
View(stress_head)
x <- omit.na(stress_head)
x <- omit.NA(stress_head)
class(stress_numeric)
stress_numeric <- as.numeric(stress_head)
class(stress_numeric)
class(stress_head)
median(stress_data[1,])
median(stress_data[,1])
median(stress_head[,1])
median(stress_head[1,])
median(stress_head[,1])
class(stress_head[,1])
mean(stress_head[,1])
summary(stress_head)
mean(stress_head[,1:4])
class(stress_head[,1:4])
apply(stress_head[,1:4],2,mean)
apply(stress_head[,1:4],1,mean)
x_values <- seq(1,12,1)
x_values
plot(x_values,stress_head[1,])
plot(x_values,stress_head[1,],ylab="Expression",ylim=c(-2,2),pch=16,col="red")
par(new=TRUE)
plot(x_values,stress_head[10,],ylab="Expression",
ylim=c(-2,2),pch=16,col="green")
par(new=TRUE)
plot(x_values,stress_head[10,],ylab="Expression",
,pch=16,col="green")
values <- c(1,2,3)
values <- c(1,2,3)
v_min <- min(values)
v_max <- max(values)
(v[1] - v_min)/(v_max - v_min)
(values[1] - v_min)/(v_max - v_min)
(values[3] - v_min)/(v_max - v_min)
(values[2] - v_min)/(v_max - v_min)
scale_01 <- function(value,v_min,v_max){
(value - v_min)/(v_max - v_min)
}
scale_01(2,1,3)
x <- scale_01(2,1,3)
x
min_i <- min(stress_data[1,-1])
max_i <- max(stress_data[1,-1])
for (i in stress_data[1,-1]){
scale_01(i,min_i,max_i)
}
print(scale_01(i,min_i,max_i))
for (i in stress_data[1,-1]){
print(scale_01(i,min_i,max_i))
}
for (i in stress_data[1,-1]){
scaled_values[index] <- scale_01(i,min_i,max_i)
index = index + 1
}
scaled_values <- matrix(,nrow=1,ncol=12)
min_i <- min(stress_data[1,-1])
max_i <- max(stress_data[1,-1])
index = 1
for (i in stress_data[1,-1]){
scaled_values[index] <- scale_01(i,min_i,max_i)
index = index + 1
}
plot(x_values,scaled_values,pch=16,col="red")
scaled_values2 <- matrix(,nrow=1,ncol=12)
index = 1
for (i in stress_data[10,-1]){
scaled_values2[index] <- scale_01(i,min_i,max_i)
index = index + 1
}
plot(x_values,scaled_values2,pch=16,col="green")
scaled_values2 <- matrix(,nrow=1,ncol=12)
min_i <- min(stress_data[10,-1])
max_i <- max(stress_data[10,-1])
index = 1
for (i in stress_data[10,-1]){
scaled_values2[index] <- scale_01(i,min_i,max_i)
index = index + 1
}
plot(x_values,scaled_values,pch=16,col="red")
par(new=TRUE)
plot(x_values,scaled_values2,pch=16,col="green")
plot(x_values,scaled_values,pch=16,col="red")
par(new=TRUE)
plot(x_values,scaled_values2,pch=16,col="green")
df <- read.table('fc_data.txt', header=TRUE)
View(df)
df <- read.table('fc_data.txt', header=TRUE, sep=',')
View(df)
View(df)
install.packages('fcp')
library(fcp)
library(fpc)
View(df)
c <- kmeans(df, 5, inter.max=100, nstart=50)
c <- kmeans(df, 5, iter.max=100, nstart=50)
View(df)
View(df)
c <- kmeans(df, 5)
c <- kmeans(asinh(df), 5, iter.max=100, nstart=50)
View(df)
df <- read.table('fc_data.txt', header=TRUE, sep=',', row.name=1)
View(df)
c <- kmeans(df, 5, iter.max=100, nstart=50)
c
c$size
size
install.packages('reshape')
library(reshap)
library(reshape)
library(ggplot2)
View(df)
c$cluster
cluster <- as.matrix(c$cluster)
View(cluster)
cluster <- merge(cluster, df, by='row.names')
View(cluster)
View(cluster)
melt <- melt(cluster, id=c('row.names','V1'))
View(cluster)
melt <- melt(cluster, id=c('Row.names','V1'))
View(melt)
View(melt)
View(melt)
g <- ggplot(melt, aes(x=variable, y=value, fill=variable))
g + geom_boxplot()
g + geom_boxplot() +
facet_wrap(~V1)
c <- kmeans(asinh(df), 5, iter.max=100, nstart=50)
c$size
cluster <- as.matrix(c$cluster)
cluster <- merge(cluster, asinh(df), by='row.names')
melt <- melt(cluster, id=c('Row.names','V1'))
g <- ggplot(melt, aes(x=variable, y=value, fill=variable))
g + geom_boxplot() +
facet_wrap(~V1)
